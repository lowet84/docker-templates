version: "3"
services:
  traefik:
    container_name: traefik
    image: traefik
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.pi.com`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    ports:
      - 8000:80
    command:
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --api.insecure=true
      - --log.level=DEBUG
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    volumes:
      - C:\temp\volumes/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.pi.com`)
      - traefik.http.services.portainer.loadbalancer.server.port=9000
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: always
    volumes:
      - C:\temp\volumes/sonarr:/config
      - C:\temp\data:/mnt
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarrsonarr.rule=Host(`sonarr.pi.com`)
      - traefik.http.services.sonarrsonarr.loadbalancer.server.port=8989
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: always
    volumes:
      - C:\temp\volumes/radarr:/config
      - C:\temp\data:/mnt
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.pi.com`)
      - traefik.http.services.radarr.loadbalancer.server.port=7878
  rethinkdb:
    image: rethinkdb
    container_name: rethinkdb
    restart: always
    volumes:
      - C:\temp\volumes/rethinkdb:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.rethinkdb.rule=Host(`rethinkdb.pi.com`)
      - traefik.http.services.rethinkdb.loadbalancer.server.port=8080
